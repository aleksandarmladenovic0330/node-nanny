name: Release

on:
  workflow_run:
    workflows: ['Build & Test']
    branches: [dev]
    types:
      - completed

jobs:
  semantic-release:
    name: Semantic Release & Publish Core
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'pnpm'
      - name: Prepare core package for publish
        run: |
          pnpm install --no-frozen-lockfile
          pnpm build
          cd ./packages/core
          find . -type f -name "*jest*" -delete
          find . -type f -name "*.test.*" -delete
          pnpm prune --production
          cp ./package.json ./dist

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/npm
            @semantic-release/git
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker:
    name: Docker Build & Push
    needs: [build, semantic-release]
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: CI

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: pocketfoundation/node-nanny
          - dockerfile: ./DockerfileUI
            image: pocketfoundation/node-nanny-ui

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: ${{ matrix.dockerfile }}
          tags: |
            ${{ matrix.image }}:dev
